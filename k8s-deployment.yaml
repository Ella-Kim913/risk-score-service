# k8s-deployment.yaml

---
# 1. Kubernetes Deployment: Manages the application containers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: risk-score-deployment
  labels:
    app: risk-score
spec:
  replicas: 1 # Start with 1 replica
  selector:
    matchLabels:
      app: risk-score
  template:
    metadata:
      labels:
        app: risk-score
    spec:
      containers:
        - name: risk-score-container
          image: ghcr.io/ella-kim913/risk-score-service:latest
          imagePullPolicy: Always # <-- CHANGE: Always pull the newest image from the registry
          ports:
            - containerPort: 8080

          # ðŸš¨ ADD LIVENESS AND READINESS PROBES HERE ðŸš¨
          livenessProbe:
            tcpSocket:                 # <-- CHANGE: Use simple TCP check
              port: 8080               # Check if the port is accepting connections
            initialDelaySeconds: 20    # Set to 20s (less than the 30s you had, but > 7s startup)
            periodSeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/risk/ping  # <-- Keep the original HTTP check
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 3
---
# 2. Kubernetes Service: Exposes the Deployment to the outside world
apiVersion: v1
kind: Service
metadata:
  name: risk-score-service
spec:
  selector:
    app: risk-score
  type: NodePort # NodePort exposes the service on a port accessible on the Minikube IP
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30001 # Optionally define a specific high port (30000-32767)