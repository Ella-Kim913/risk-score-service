name: CI/CD Pipeline for Risk Score Service

on:
  push:
    branches:
      - main

env:
  # Define variables once for use throughout the workflow
  REGISTRY: ghcr.io
  # IMAGE_NAME automatically becomes <your_username>/risk-score-service
  IMAGE_NAME: ${{ github.repository }}
  # TAG is the unique commit SHA (version)
  TAG: ${{ github.sha }}
  # Short tag for convenience
  SHORT_SHA: ${{ substr(github.sha, 0, 7) }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Necessary to push to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test with Maven
        run: ./mvnw clean install

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Your GitHub username
          # Uses the built-in GITHUB_TOKEN for password
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the Dockerfile in the current directory
          push: true
          # Tag with the full SHA and a short SHA for easy identification
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest # Also tag as 'latest'
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ### The Deployment Job (Simulated Deployment) ###
  deploy-to-cluster:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl (Required for deployment)
        uses: azure/setup-kubectl@v3 # Standard GitHub action to get kubectl

      - name: Simulate Deployment to External Cluster
        run: |
          FULL_IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"
          
          echo "--- Beginning Automated Deployment ---"
          echo "New image tag: $FULL_IMAGE_TAG"
          
          # ⚠️ FOR A REAL DEPLOYMENT TO GKE/EKS/AKS:
          # You would configure cloud credentials here, set the KUBECONFIG variable,
          # and then use kubectl to update the image tag on the running Deployment.
          
          # Example of the command you would run on a real cluster:
          # kubectl set image deployment/risk-score-deployment risk-score-container=$FULL_IMAGE_TAG
          
          echo "Deployment successful (simulated). Rollout status check would follow."
          echo "--- CI/CD Pipeline End ---"
